1. When you run a go run command default port is 4000 and default env is dev, so to change this
-> go run ./cmd/api -port=3030 -env=production

2. cURL command to test that if API takes more than maxBytes
-> curl -d @tmp/largefile.json localhost:4000/v1/movies

3. To add data through terminal 
BODY='{"title":"Moana","year":2016,"runtime":"107 mins","genres":["animation","adventure"]}'
curl -i -d "$BODY" localhost:4000/v1/movies

4. user- greenlight password - pa55word

5. To generate pair of migrating files
- migrate create -seq -ext=.sql -dir=./migrations create_movies_table

6. Executing migrations (up)
- migrate -path=./migrations -database=$GREENLIGHT_DB_DSN up

7. To roll-back to a specific version 
migrate -path=./migrations -database=$EXAMPLE_DSN goto version_number

8. To hit request concurrently
xargs -I % -P8 curl -X PATCH -d '{"runtime": "97 mins"}' "localhost:4000/v1/movies/4" < <(printf '%s\n' {1..18})

9. To see the total time taken by the cURL request 
curl -w '\nTime: %{time_total}s \n' localhost:4000/v1/movies/1

10. Query String should be in the following format.
curl "localhost:4000/v1/movies?title=godfather&genres=crime,drama&page=1&page_size=5&sort=year"

11. Query string without quotes should only have one filter
curl localhost:4000/v1/movies?title=avengers

12. To make concurrent request for rate limit testing 
for i in {1..6}; do curl http://localhost:4000/v1/healthcheck; done

13. bcrypt func GenerateFromPassword returns a hash string in the following format.
$2b$[cost]$[22-character salt][31-character hash]

14. How to add users with taken time 
    BODY='{"name": "Arthur Morgan", "email": "arthur@gmail.com", "password": "pa55word"}'
    curl -w '\nTime: %{time_total}\n' -d "$BODY" localhost:4000/v1/users

15. How to send a CORS request to get response through cURL (cause browsers have same-origin policy which denies access to JS)
 curl -H "Origin: http://localhost:9000" http://localhost:4000/v1/healthcheck

16. Command to show the targets and it's use on makefile
make help

17. To remove everything from the module cache 
go clean -modcache

18. Command to run the build with necessary flag values
./bin/api -port=4040 -db-dsn=postgres://greenlight:pa55word@localhost/greenlight?sslmode=disable

19. command to override linking phase
go build -ldflags='s' -o=./bin/api ./cmd/api

20. To see distribution list
go tool dist list

21. to specifically create binary file for particular os and env 
GOOS=linux GOARCH=amd64 go build {args}
GOOS=linux GOARCH=amd64 go build -ldflags='-s' -o=./bin/linux_amd64/api ./cmd/api

22. if c library has been changes since the last build then use -a flag in build command or use
go build -a -o=/bin/foo ./cmd/foo # Force all packages to be rebuilt
go clean -cache # Remove everything from the build cache

23. command if sslmode not enabled error
./bin/api -db-dsn=postgres://greenlight:pa55word@localhost/greenlight?sslmode=disable